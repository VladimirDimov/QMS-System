@using PagedList
@model IQueryable<QMS.Web.ViewModels.Documents.DocumentListViewModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using GridMvc.Html

<div class="page-header">
    <h1>
        <span class="label label-default">Documents</span>
        <small>@ViewBag.Title</small>
    </h1>
</div>


<div>
    @Html.Grid(Model).Columns(col =>
{
    col.Add(m => m.Title).Titled("Name").Filterable(true).Sortable(true).SetWidth(40);
    col.Add(m => m.Description).Titled("Description").Filterable(true).Sortable(true).SetWidth(40);
    col.Add(m => m.Procedure.Name).Titled("Procedure").Filterable(true).Sortable(true).SetWidth(40);

    col.Add(m => m.LastUpdate).Titled("Date updated").Filterable(true).Sortable(true).SetWidth(40);

    col.Add()
    .Sanitized(false)
    .Encoded(false)
    .RenderValueAs(m => Html.ActionLink("File", "GetFile", "Documents", new { documentId = m.Id, area = "" }, null))
    .SetWidth(20);
}).WithPaging(5, 5).Selectable(false)
</div>

<div class="clearfix"></div>


