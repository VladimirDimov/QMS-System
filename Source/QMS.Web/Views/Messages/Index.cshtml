@model QMS.Web.Models.Messages.MessageCreateViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<div class="container">
    @using (Ajax.BeginForm("SendMessage", "Messages", new { area = "" }, new AjaxOptions
    {
        HttpMethod = "GET"
    }))
    {
        @Html.DropDownListFor(m => m.ReceiverId, ViewBag.Users as IEnumerable<SelectListItem>, new { @class = "form-control", id = "receiverId" })
        @Html.EditorFor(m => m.Title, null, new { id = "title", name = "title", @class = "form-control" })
        @Html.EditorFor(m => m.Content, null, new { type = "text", @class = "form-control" })
        <input type="submit" id="sendmessage" value="Send" class="btn btn-default" />
    }
    <input type="hidden" id="displayname" />
    <ul id="discussion" class="list-group">
        @Html.Action("LoadChatHistory")
        //TODO: Load history;
    </ul>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (senderUsername, title, content, sentOn) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(senderUsername).html();
                var encodedTitle = $('<div />').text(title).html();
                var encodedContent = $('<div />').text(content).html();
                var encodedSentOn = $('<div />').text(sentOn).html();
                // Add the message to the page.
                $('#discussion').prepend(
                    '<li class="list-group-item">' +
                        '<div class="well well-lg">' +
                        '<p><strong>' + encodedSentOn + '</strong></p>' +
                        '<p><strong>' + encodedName + '</strong></p>' +
                        '<p>' + encodedTitle + '</p>' +
                        '<p><strong>' + encodedContent + '</strong></p>' +
                        '</div>' +
                        '</li>');
            };

            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    var receiverId = $('#receiverId').val();
                    var content = $('#Content').val();
                    var title = $('#Title').val();

                    chat.server.send(receiverId, title, content);
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
    </script>
}